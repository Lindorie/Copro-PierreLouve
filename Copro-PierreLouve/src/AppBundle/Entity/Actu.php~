<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Actu
 *
 * @ORM\Table()
 * @ORM\Entity
 */
class Actu
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="titre", type="string", length=255)
     */
    private $titre;
    
    /**
     * @Assert\File(maxSize="6000000")
     */
    public $file;
    
    /**
     * @var string
     *
     * @ORM\Column(name="extension", type="string", length=5)
     */
    private $extension;

    /**
     * @var string
     *
     * @ORM\Column(name="texte", type="text")
     */
    private $texte;

    /**
     * @ORM\ManyToOne(targetEntity="AppBundle\Entity\User", inversedBy="actus")
     * @ORM\JoinColumn(name="user_id", referencedColumnName="id")
     **/
    private $auteur;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="date", type="datetime")
     */
    private $date;

    public function __construct()
    {
    	$this->date = new \DateTime();
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set titre
     *
     * @param string $titre
     * @return Actu
     */
    public function setTitre($titre)
    {
        $this->titre = $titre;

        return $this;
    }

    /**
     * Get titre
     *
     * @return string
     */
    public function getTitre()
    {
        return $this->titre;
    }

    /**
     * Set texte
     *
     * @param text $texte
     * @return Actu
     */
    public function setTexte($texte)
    {
        $this->texte = $texte;

        return $this;
    }

    /**
     * Get texte
     *
     * @return string
     */
    public function getTexte()
    {
        return $this->texte;
    }


    /**
     * Get auteur
     *
     * @return \stdClass
     */
    public function getAuteur()
    {
        return $this->auteur;
    }

    /**
     * Set date
     *
     * @param \DateTime $date
     * @return Actu
     */
    public function setDate($date)
    {
        $this->date = $date;

        return $this;
    }

    /**
     * Get date
     *
     * @return \DateTime
     */
    public function getDate()
    {
        return $this->date;
    }

    /**
     * Set auteur
     *
     * @param \AppBundle\Entity\User $auteur
     * @return Actu
     */
    public function setAuteur(\AppBundle\Entity\User $auteur = null)
    {
        $this->auteur = $auteur;

        return $this;
    }
    
    public function upload($directory)
    {
    	// la propriété « file » peut être vide si le champ n'est pas requis
    	if (null === $this->file) {
    		return;
    	}
    	if ($this->extension === null) {
    		$this->retrieveSetExtension();
    	}
    	$this->file->move($directory, $this->id.".".$this->extension);
    	 
    }
    public function getFileName() {
    	$fichier = $this->id.".".$this->extension;
    	return $fichier;
    }
    
    public function retrieveSetExtension() {
    	$this->extension = pathinfo($this->file->getClientOriginalName(), PATHINFO_EXTENSION);
    }
}
